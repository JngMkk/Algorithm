"""
    처리되지 않은 데이터 중에서 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸는 것을 반복함.
"""

arr = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(len(arr)):
    now = i
    for j in range(i + 1, len(arr)):
        if arr[now] > arr[j]:
            now = j
    arr[i], arr[now] = arr[now], arr[i]

print(arr)

"""
    정렬 알고리즘 비교

                        평균 시간 복잡도        공간 복잡도         특징
        선택 정렬            O(N^2)              O(N)       아이디어가 매우 간단함.
        삽입 정렬            O(N^2)              O(N)       데이터가 거의 정렬되어 있을 때는 가장 빠름
        퀵 정렬             O(NlogN)             O(N)       대부분의 경우에 가장 적합하며, 충분히 빠름.
        계수 정렬           O(N + K)           O(N + K)     데이터의 크기가 한정되어 있는 경우에만 사용이 가능하지만 매우 빠르게 동작함.
"""
